name: SonarQube Analysis

on:
  push:         { branches: [ main ] }
  pull_request: { branches: [ main ] }
  workflow_dispatch:

jobs:
  sonarqube:
    runs-on: ubuntu-latest   # or [self‑hosted, linux]

    services:
      sonarqube:
        image: sonarqube:9-community
        ports: ["9000:9000"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Download & install SonarScanner CLI
        run: |
          curl -sSL \
            https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip \
            -o $RUNNER_TEMP/sonar-scanner.zip
          unzip -q $RUNNER_TEMP/sonar-scanner.zip -d $RUNNER_TEMP
          echo "$RUNNER_TEMP/sonar-scanner-*/bin" >> $GITHUB_PATH

      - name: Wait for SonarQube
        run: |
          until curl -sSf http://localhost:9000/api/server/version; do
            echo "Waiting for SonarQube…"
            sleep 5
          done

      - name: Run SonarScanner
        run: |
          sonar-scanner \
            -Dsonar.projectKey=your-project-key \
            -Dsonar.sources=. \
            -Dsonar.host.url=http://localhost:9000 \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
